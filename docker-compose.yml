services:
  nginx-proxy:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    networks:
      - shared-network
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:rw
      - ./certbot/conf:/etc/letsencrypt:rw
      - ./certbot/www:/var/www/certbot:ro
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  
  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt:rw
      - ./certbot/www:/var/www/certbot:ro
    restart: unless-stopped
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "5000:80"
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - shared-network
    environment:
      - VITE_API_URL=http://backend:4000

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "4000:4000"
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=4000
      - CORS_ORIGIN=https://m1theus.ddns.net
    networks:
      - shared-network

networks:
  shared-network:
    driver: bridge
