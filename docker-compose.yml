version: '3.8'

services:
  frontend:
    container_name: portfolio-frontend
    build:
      context: .
      target: frontend-builder
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - portfolio-network
    depends_on:
      backend:
        condition: service_healthy

  backend:
    container_name: portfolio-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - portfolio-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/system/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./data/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - portfolio-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --quiet; sleep 12h & wait $${!}; done;'"

networks:
  portfolio-network:
    driver: bridge